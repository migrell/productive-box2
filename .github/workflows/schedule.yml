name: Update Productivity Gist with Commit Activity
on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 */6 * * *"  # 6시간마다 실행 (하루에 4번)

jobs:
  update-gist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Create update script
        run: |
          cat > update-gist.js << 'EOL'
          const { Octokit } = require('@octokit/rest');
          
          async function main() {
            const octokit = new Octokit({
              auth: process.env.GH_TOKEN
            });
            
            // 한국 시간으로 설정
            const koreaTime = new Date(new Date().toLocaleString('en-US', { timeZone: 'Asia/Seoul' }));
            const hour = koreaTime.getHours();
            
            // 최근 100개의 이벤트 가져오기
            const username = 'migrell'; // GitHub 사용자 이름
            
            const events = await octokit.activity.listPublicEventsForUser({
              username: username,
              per_page: 100
            });
            
            // 시간대별 활동 횟수 초기화
            const hourActivity = Array(24).fill(0);
            
            // 이벤트 분석
            events.data.forEach(event => {
              const eventDate = new Date(event.created_at);
              const eventHour = new Date(eventDate.toLocaleString('en-US', { timeZone: 'Asia/Seoul' })).getHours();
              hourActivity[eventHour]++;
            });
            
            // 시간대별 이모지 매핑
            const hourEmojis = hourActivity.map(count => {
              if (count === 0) return '🌙'; // 활동 없음
              if (count < 2) return '🌤️'; // 약간의 활동
              if (count < 5) return '⚡'; // 중간 활동
              return '🔥'; // 높은 활동
            });
            
            // 현재 시간 표시 강조
            const originalEmoji = hourEmojis[hour];
            hourEmojis[hour] = `[${originalEmoji}]`;
            
            // 활동 요약 통계
            const totalActivity = hourActivity.reduce((sum, count) => sum + count, 0);
            const morningActivity = hourActivity.slice(5, 12).reduce((sum, count) => sum + count, 0);
            const afternoonActivity = hourActivity.slice(12, 18).reduce((sum, count) => sum + count, 0);
            const eveningActivity = hourActivity.slice(18, 24).reduce((sum, count) => sum + count, 0);
            const nightActivity = hourActivity.slice(0, 5).reduce((sum, count) => sum + count, 0);
            
            // 가장 활동적인 시간대 찾기
            let mostActiveHour = 0;
            for (let i = 1; i < 24; i++) {
              if (hourActivity[i] > hourActivity[mostActiveHour]) {
                mostActiveHour = i;
              }
            }
            
            // Gist 내용 만들기
            let content = '## Jiho\'s Productivity Box\n\n';
            content += '```text\n';
            
            // 시간대별 상태 표시
            for (let i = 0; i < 24; i++) {
              const displayHour = i.toString().padStart(2, '0');
              const activityCount = hourActivity[i].toString().padStart(2, ' ');
              content += `${displayHour}:00 ${hourEmojis[i]} ${activityCount}\n`;
            }
            
            content += '```\n\n';
            
            // 활동 요약
            content += '### 활동 요약\n';
            content += `- 총 활동: ${totalActivity}회\n`;
            content += `- 아침 활동 (05-12): ${morningActivity}회\n`;
            content += `- 오후 활동 (12-18): ${afternoonActivity}회\n`;
            content += `- 저녁 활동 (18-24): ${eveningActivity}회\n`;
            content += `- 밤 활동 (00-05): ${nightActivity}회\n`;
            content += `- 가장 활동적인 시간: ${mostActiveHour.toString().padStart(2, '0')}:00 (${hourActivity[mostActiveHour]}회)\n\n`;
            
            content += `Last Updated: ${koreaTime.toLocaleString('ko-KR')}`;
            
            // Gist 업데이트
            await octokit.gists.update({
              gist_id: process.env.GIST_ID,
              files: {
                'productive-box.md': {
                  content: content
                }
              }
            });
            
            console.log('Gist updated successfully!');
          }
          
          main().catch(error => {
            console.error('Error updating gist:', error);
            process.exit(1);
          });
          EOL
      
      - name: Install dependencies
        run: npm install @octokit/rest
        
      - name: Update Gist
        run: node update-gist.js
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GIST_ID: 1a12be02f9e72a4ccf2596cba9e1190c
